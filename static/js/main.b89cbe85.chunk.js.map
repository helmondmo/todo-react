{"version":3,"sources":["components/showList.js","components/addList.js","App.js","reportWebVitals.js","index.js"],"names":["ShowList","props","toDo","deleteItem","completedItem","toDoList","map","element","className","checked","text","onClick","id","AddList","addToDoItem","onSubmit","event","preventDefault","newItem","target","item","value","Math","random","htmlFor","type","name","App","bind","state","this","setState","filter","itemIndex","findIndex","task","newArr","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAyBeA,MArBf,SAAkBC,GAAQ,IAChBC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,WAAYC,EAAiBH,EAAjBG,cAEnBC,EAAWH,EAAKI,KAAI,SAAAC,GACtB,OAAO,qBAAsBC,WAA+B,IAApBD,EAAQE,QAAmB,UAAY,GAAxE,SACR,+BAAKF,EAAQG,KACb,wBAAQC,QAAS,WAAOR,EAAWI,EAAQK,KAA3C,oBACA,wBAAQD,QAAS,WAAOP,EAAcG,IAAtC,0BAHkBA,EAAQK,OAS5B,OACI,8BACKP,KCWGQ,MA3BhB,SAAiBZ,GAAQ,IAEda,EAAeb,EAAfa,YAeN,OACK,uBAAMC,SAbb,SAAsBC,GACrBA,EAAMC,iBACL,IAAMC,EAAS,CACVR,KAAMM,EAAMG,OAAOC,KAAKC,MACxBZ,SAAS,EACTG,GAAIU,KAAKC,UAGdT,EAAYI,IAKP,UACI,uBAAOM,QAAQ,OAAf,wBACA,uBAAOC,KAAK,OAAOC,KAAK,SACxB,kDC0CCC,E,kDA1Db,WAAY1B,GAAO,IAAD,8BAChB,cAAMA,IACDa,YAAa,EAAKA,YAAYc,KAAjB,gBAClB,EAAKzB,WAAY,EAAKA,WAAWyB,KAAhB,gBACjB,EAAKxB,cAAgB,EAAKA,cAAcwB,KAAnB,gBAErB,EAAKC,MAAQ,CACX3B,KAAK,CACH,CAACQ,KAAM,mBAAoBD,SAAS,EAAOG,GAAG,GAC9C,CAACF,KAAM,mBAAoBD,SAAS,EAAOG,GAAG,KATlC,E,wDAeNM,GAAS,IACbhB,EAAQ4B,KAAKD,MAAb3B,KACL4B,KAAKC,SAAS,CACZ7B,KAAK,GAAD,mBAAMA,GAAN,CAAYgB,Q,iCAIVN,GAAI,IACPV,EAAQ4B,KAAKD,MAAb3B,KAEN4B,KAAKC,SAAS,CACZ7B,KAAMA,EAAK8B,QAAO,SAAAZ,GAAI,OAAIA,EAAKR,KAAOA,S,oCAI5BQ,GAAM,IACXlB,EAAQ4B,KAAKD,MAAb3B,KACD+B,EAAY/B,EAAKgC,WAAU,SAAAC,GAAI,OAAGA,EAAKvB,KAAOQ,EAAKR,MACnDwB,EAAM,YAAOlC,GACnBkC,EAAOH,GAAP,2BAAwBG,EAAOH,IAA/B,IAA2CxB,SAAU2B,EAAOH,GAAWxB,UAGvEqB,KAAKC,SAAS,CACZ7B,KAAMkC,M,+BAOD,IACAlC,EAAQ4B,KAAKD,MAAb3B,KACL,OACE,sBAAKM,UAAU,MAAf,UACA,+CACA,cAAC,EAAD,CAAUN,KAAQA,EAAMC,WAAa2B,KAAK3B,WAAYC,cAAgB0B,KAAK1B,gBAC3E,cAAC,EAAD,CAASU,YAAegB,KAAKhB,qB,GArDnBuB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b89cbe85.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css'\r\n\r\n\r\nfunction ShowList(props) {\r\n   const {toDo, deleteItem, completedItem} = props\r\n   \r\n   const toDoList = toDo.map(element => {\r\n       return <div key={element.id} className={element.checked === true ? 'checked' : ''} >\r\n      <ul>{element.text} \r\n      <button onClick={() => {deleteItem(element.id)}}>delete</button>\r\n      <button onClick={() => {completedItem(element)}}>complete</button>\r\n      </ul>\r\n       </div>\r\n\r\n   })\r\n\r\n    return(\r\n        <div>\r\n            {toDoList}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowList","import React from 'react'\r\n\r\n\r\nfunction AddList(props) {\r\n    \r\n    const {addToDoItem} = props\r\n   \r\n   \r\n   function handleSubmit(event) {\r\n    event.preventDefault();\r\n     const newItem= {\r\n          text: event.target.item.value,\r\n          checked: false,\r\n          id: Math.random()\r\n      }\r\n     \r\n     addToDoItem(newItem)\r\n    }\r\n    \r\n \r\n     return(\r\n          <form onSubmit={handleSubmit}>\r\n              <label htmlFor=\"item\">Add item: </label>\r\n              <input type=\"text\" name=\"item\" />\r\n              <button >Add item</button>\r\n          </form>\r\n     )\r\n }\r\n \r\n \r\n export default AddList     ","import React, { Component } from 'react'\nimport './App.css';\nimport ShowList from './components/showList'\nimport AddList from './components/addList'\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.addToDoItem =this.addToDoItem.bind(this)\n    this.deleteItem =this.deleteItem.bind(this)\n    this.completedItem = this.completedItem.bind(this)\n\n    this.state = {\n      toDo:[\n        {text: \"Take out the Bin\", checked: false, id:1},\n        {text: \"Finish the Quran\", checked: false, id:2}\n      ]\n    \n    }\n  }\n\n  addToDoItem(newItem){\n    const{toDo} = this.state\n     this.setState({\n       toDo: [...toDo, newItem]\n     })\n  }\n\n  deleteItem(id){\n    const{toDo} = this.state\n\n    this.setState({\n      toDo: toDo.filter(item => item.id !== id)\n    })\n  }\n\n  completedItem(item){\n    const {toDo} = this.state\n    const itemIndex = toDo.findIndex(task =>task.id === item.id)\n    const newArr = [...toDo]\n    newArr[itemIndex] = {...newArr[itemIndex], checked: !newArr[itemIndex].checked }\n\n    \n    this.setState({\n      toDo: newArr\n    })\n  }\n \n\n\n\n  render(){\n    const {toDo} = this.state\n      return (\n        <div className=\"App\">\n        <h1>ToDo list app</h1>\n        <ShowList toDo = {toDo} deleteItem ={this.deleteItem} completedItem ={this.completedItem}/>\n        <AddList addToDoItem = {this.addToDoItem}        />\n        </div>\n      );\n    }\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}